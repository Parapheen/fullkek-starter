<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{{ .AppName }} - Tailwind Starter</title>
    <link rel="stylesheet" href="/assets/styles/output.css" />
    {{- if .Stack.HasFeature "frontend-htmx" }}
    <script src="/assets/scripts/htmx.min.js" defer></script>
    {{- end }}
    {{- if .Stack.HasFeature "frontend-fixi" }}
    <script src="/assets/scripts/fixi.js" defer></script>
    {{- end }}
  </head>
  <body class="bg-slate-50 text-slate-900">
    <main class="max-w-5xl mx-auto px-6 py-16 space-y-16">
      <header class="text-center space-y-6">
        <span class="text-sm font-semibold tracking-[0.35em] text-sky-600 uppercase">Tailwind</span>
        <h1 class="text-4xl sm:text-5xl font-bold leading-tight">Welcome to {{ .AppName }}</h1>
        <p class="text-lg text-slate-600 max-w-2xl mx-auto">
          A lightweight Tailwind starter focused on server-rendered UI and progressive enhancement.
          Wire up your transport layer, sprinkle in interactivity, and ship with confidence.
        </p>
        <div class="flex flex-wrap justify-center gap-3">
          <a class="inline-flex items-center gap-2 rounded-lg bg-sky-600 px-5 py-2 text-white font-medium shadow-sm hover:bg-sky-700 transition" href="https://tailwindcss.com/docs" target="_blank" rel="noreferrer">
            Tailwind Docs
          </a>
          <a class="inline-flex items-center gap-2 rounded-lg border border-slate-200 bg-white px-5 py-2 text-slate-700 font-medium hover:bg-slate-100 transition" href="https://github.com/Parapheen/fullkek-starter" target="_blank" rel="noreferrer">
            fullkek Starter
          </a>
        </div>
        {{- if .Stack.HasFeature "auth-github-oauth2" }}
        {{- if .Stack.HasFeature "frontend-htmx" }}
        <div id="auth-status" hx-get="/fragments/auth/status" hx-trigger="load" hx-swap="outerHTML"></div>
        {{- else }}
        <div id="auth-status"></div>
        <script>
          document.addEventListener("DOMContentLoaded", function () {
            var el = document.getElementById("auth-status");
            if (!el) {
              return;
            }
            fetch("/fragments/auth/status", { credentials: "include" })
              .then(function (resp) {
                return resp.text();
              })
              .then(function (html) {
                el.outerHTML = html;
              })
              .catch(function () {});
          });
        </script>
        {{- end }}
        {{- end }}
      </header>

      <section class="grid gap-6 md:grid-cols-3">
        <article class="rounded-2xl border border-slate-200 bg-white p-6 shadow-sm">
          <h2 class="text-lg font-semibold text-slate-900">Designed for clarity</h2>
          <p class="mt-3 text-sm text-slate-600">
            Start from a clean layout with sensible defaults. Customize the markup and Tailwind tokens to match your brand.
          </p>
        </article>
        <article class="rounded-2xl border border-slate-200 bg-white p-6 shadow-sm">
          <h2 class="text-lg font-semibold text-slate-900">Template driven</h2>
          <p class="mt-3 text-sm text-slate-600">
            HTML templates live under <code class="font-mono text-slate-500">web/templates</code>. Extend them with partials or drop in your own pages.
          </p>
        </article>
        <article class="rounded-2xl border border-slate-200 bg-white p-6 shadow-sm">
          <h2 class="text-lg font-semibold text-slate-900">Progressive enhancement</h2>
          <p class="mt-3 text-sm text-slate-600">
            Choose HTMX or Fixi.js for light client-side behaviours. Everything still works with plain HTML.
          </p>
        </article>
      </section>

      {{- if .Stack.HasFeature "frontend-htmx" }}
      <section class="rounded-2xl border border-slate-200 bg-white p-8 shadow-sm space-y-4">
        <h2 class="text-2xl font-semibold text-slate-900">HTMX demo</h2>
        <p class="text-sm text-slate-600">
          Fetch a counter fragment from the server using <code class="font-mono text-slate-500">hx-get</code>, then swap it into the page without JavaScript glue code.
        </p>
        <button
          class="inline-flex items-center gap-2 rounded-lg bg-sky-600 px-4 py-2 text-white font-medium hover:bg-sky-700 transition"
          hx-get="/api/counter"
          hx-target="#htmx-counter"
          hx-swap="innerHTML"
        >
          Load counter
        </button>
        <div id="htmx-counter" class="rounded-lg border border-slate-200 bg-slate-50 px-4 py-3 text-slate-600">
          The counter response will render here.
        </div>
      </section>
      {{- end }}

      <section class="rounded-2xl border border-slate-200 bg-white p-8 shadow-sm space-y-4">
        <h2 class="text-2xl font-semibold text-slate-900">CSRF-protected form demo</h2>
        <p class="text-sm text-slate-600">Posts to <code class="font-mono text-slate-500">/demo/echo</code> and echoes the submitted message.</p>
        <form method="post" action="/demo/echo" class="space-y-3">
          <div class="grid gap-1">
            <label class="text-sm text-slate-700" for="message">Message</label>
            <input id="message" name="message" type="text" class="rounded-lg border border-slate-300 px-3 py-2" placeholder="Hello world" />
          </div>
          <button class="inline-flex items-center gap-2 rounded-lg bg-slate-900 px-4 py-2 text-white font-medium hover:bg-slate-700 transition" type="submit">Submit</button>
        </form>
        <div class="text-sm text-slate-600">CSRF token is injected automatically via cookie and a hidden field.</div>
      </section>

      {{- if .Stack.HasFeature "frontend-fixi" }}
      <section class="rounded-2xl border border-slate-200 bg-white p-8 shadow-sm space-y-4">
        <h2 class="text-2xl font-semibold text-slate-900">Fixi.js demo</h2>
        <p class="text-sm text-slate-600">
          Fixi keeps your markup declarative. Request fragments or bind form handlers with small controller functions.
        </p>
        <button class="inline-flex items-center gap-2 rounded-lg bg-slate-900 px-4 py-2 text-white font-medium hover:bg-slate-700 transition" fx-action="/api/counter" fx-target="#fixi-counter">
          Fetch counter
        </button>
        <div id="fixi-counter" class="rounded-lg border border-slate-200 bg-slate-50 px-4 py-3 text-slate-600">
          Fixi.js content will appear here.
        </div>
      </section>
      {{- end }}

  <footer class="text-center space-y-2 text-sm text-slate-500">
    <p>Generated by fullkek • {{ .AppName }} © 2025</p>
    <div class="flex flex-wrap justify-center gap-2 text-slate-500">
      {{ range .Stack.Features }}
      <span class="rounded-full border border-slate-200 bg-white px-3 py-1 text-xs font-medium uppercase tracking-wide">{{ .Name }}</span>
      {{ end }}
    </div>
  </footer>
  </main>
  <script src="/assets/scripts/csrf.js" defer></script>
  </body>
</html>
